include:
  - project: 'pedroetb-projects/gitlab-ci-templates'
    ref: master
    file: '/packaging-docker/_base.yml'
  - project: 'pedroetb-projects/gitlab-ci-templates'
    ref: master
    file: '/packaging-docker/dockerfile-linting.yml'
  - project: 'pedroetb-projects/gitlab-ci-templates'
    ref: master
    file: '/scanning/container-scanning.yml'

stages:
  - pre-package
  - package
  - post-package

.docker-login-gitlab: &docker-login-gitlab |
  env | grep "^CI_JOB_TOKEN=" | cut -d '=' -f 2- | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}

.docker-login-dockerhub: &docker-login-dockerhub |
  env | grep "^DOCKER_HUB_PASS=" | cut -d '=' -f 2- | docker login -u ${DOCKER_HUB_USER} --password-stdin

.create-multiarch-builder: &create-multiarch-builder |
  docker buildx create --driver docker-container --name multiarch-builder --use

.docker-operations:
  extends: .dind-env
  image: ${PACKAGING_IMAGE_NAME}:${PACKAGING_IMAGE_TAG}
  variables:
    PACKAGING_IMAGE_NAME: docker
    PACKAGING_IMAGE_TAG: latest
    PACKAGED_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}
    PACKAGED_IMAGE_TAG: ${CI_COMMIT_SHA}
    LATEST_TAG_VALUE: latest

docker-build:
  extends: .docker-operations
  stage: package
  variables:
    COMPOSE_FILE_NAME: compose.yaml
    COMPOSE_ENV_FILE_NAME: .env
    COMPOSE_PROJECT_DIRECTORY: '.'
    BUILDX_GIT_INFO: 'false'
  script:
    - *docker-login-gitlab
    - *create-multiarch-builder
    - >
      VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}
      COMPOSE_FILE=${COMPOSE_PROJECT_DIRECTORY}/${COMPOSE_FILE_NAME}
      IMAGE_NAME=${PACKAGED_IMAGE_NAME}
      IMAGE_TAG=${PACKAGED_IMAGE_TAG}
      docker compose
      --env-file ${COMPOSE_PROJECT_DIRECTORY}/${COMPOSE_ENV_FILE_NAME}
      build
      -q
      --pull
      --push
      ${DOCKER_BUILD_ARGS};
    - >
      docker buildx imagetools create
      --tag ${PACKAGED_IMAGE_NAME}:${LATEST_TAG_VALUE}
      ${PACKAGED_IMAGE_NAME}:${PACKAGED_IMAGE_TAG}
  rules:
    - if: $CI_MERGE_REQUEST_ID ||
          $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH ||
          $CI_COMMIT_TAG

.docker-tag:
  extends: .docker-operations
  stage: post-package
  dependencies: []
  rules:
    - if: $CI_MERGE_REQUEST_ID ||
          $CI_PIPELINE_SOURCE == "schedule" ||
          $CI_COMMIT_BRANCH
      when: never
    - if: $CI_COMMIT_TAG

docker-tag-gitlab:
  extends: .docker-tag
  script:
    - *docker-login-gitlab
    - *create-multiarch-builder
    - >
      docker buildx imagetools create
      --tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
      --tag ${CI_REGISTRY_IMAGE}:${LATEST_TAG_VALUE}
      ${PACKAGED_IMAGE_NAME}:${PACKAGED_IMAGE_TAG}

docker-tag-dockerhub:
  extends: .docker-tag
  script:
    - *docker-login-gitlab
    - *docker-login-dockerhub
    - *create-multiarch-builder
    - dockerHubImagePath="$(echo ${CI_PROJECT_PATH} | cut -d '/' -f 2- | sed 's/\//-/g')"
    - dockerHubImage="${DOCKER_HUB_ROOT}/${dockerHubImagePath}"
    - >
      docker buildx imagetools create
      --tag ${dockerHubImage}:${CI_COMMIT_TAG}
      --tag ${dockerHubImage}:${LATEST_TAG_VALUE}
      ${PACKAGED_IMAGE_NAME}:${PACKAGED_IMAGE_TAG}
